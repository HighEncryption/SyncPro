<Window x:Class="SyncProLogViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SyncProLogViewer"
        xmlns:viewModels="clr-namespace:SyncProLogViewer.ViewModels"
        mc:Ignorable="d"
        Icon="Resources/list-search.ico"
        Title="SyncPro Log Viewer" 
        Height="{Binding Path=Config.WindowHeight, Mode=TwoWay}" 
        Width="{Binding Path=Config.WindowWidth, Mode=TwoWay}" 
        Top="{Binding Path=Config.WindowTop, Mode=TwoWay}"
        Left="{Binding Path=Config.WindowLeft, Mode=TwoWay}"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}">

    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <local:DateTimeFormatter x:Key="DateTimeFormatter" />
                <local:LevelToColorConverter x:Key="LevelToColor" />

                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <!--<Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                            <Setter Property="Background" Value="#dddddd" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#bbbbbb" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border SnapsToDevicePixels="True"
                                        TextElement.Foreground="{Binding Path=Level, Converter={StaticResource LevelToColor}, Mode=OneTime}"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0,0,0,1" 
                                        BorderBrush="#bbbbbb" >
                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                </Style>

                <!--<Style x:Key="ListViewItemContainerStyle" TargetType="{x:Type ListViewItem}"
                        BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <Setter Property="local:ListViewItemBehavior.IsBroughtIntoViewWhenSelected" Value="true"/>
                </Style>-->
            </ResourceDictionary>

        </Grid.Resources>
        <ListView ItemsSource="{Binding Entries}" x:Name="EntryListView" AlternationCount="2"
                  IsSynchronizedWithCurrentItem="True" SelectionChanged="EntryListView_OnSelectionChanged">
            <!--ItemContainerStyle="{StaticResource ListViewItemContainerStyle}">-->
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Timestamp" Width="100" x:Name="col1" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding Timestamp, Converter={StaticResource DateTimeFormatter}, ConverterParameter='HH:mm:ss.fff', Mode=OneTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Level" Width="50" x:Name="col2">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding Level, Mode=OneTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="TID" Width="50" x:Name="col3">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding ThreadId, Mode=OneTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Message" Width="{Binding ElementName=helperField, Path=ActualWidth}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding Message}" TextWrapping="Wrap" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Grid Visibility="Hidden" Margin="0,0,30,0">
            <Grid.ColumnDefinitions>
                <!--Width is bound to width of the first GridViewColumn -->
                <ColumnDefinition Width="{Binding ElementName=col1, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=col2, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=col3, Path=ActualWidth}"/>
                <!--Width is set to "Fill"-->
                <ColumnDefinition Width="*"/>
                <!--Correction Width-->
                <!--<ColumnDefinition Width="10"/>-->
            </Grid.ColumnDefinitions>
            <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
            <Grid Grid.Column="3" x:Name="helperField"/>
        </Grid>
    </Grid>
</Window>
