<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="ItemHeaderStyleCore">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource ItemHeaderStyleCore}" x:Key="ItemHeaderStyle">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,0,10,0" />
        <Setter Property="Margin" Value="0,3" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="ItemTextBlockStyle">
        <!--<Setter Property="FontSize" Value="13" />-->
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!--<Setter Property="Padding" Value="0,0,8,0" />-->
        <Setter Property="Margin" Value="0,3" />
    </Style>

    <!--
        Button
    -->

    <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="White"/>
    <LinearGradientBrush x:Key="Button.Static.Background" EndPoint="0,0" StartPoint="0,1">
        <GradientStop Color="#2A4CD3" Offset="0.0"/>
        <GradientStop Color="#3C5FEA" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF4D68DA"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF3C5FEA"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="ItemButtonStyle">
        <!--<Setter Property="FontSize" Value="13" />-->
        <!--<Setter Property="FontWeight" Value="SemiBold" />-->
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,4" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>

        <!--<Setter Property="Margin" Value="0,3" />-->
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}" x:Key="MyComboBoxStyle">
        <Setter Property="Width" Value="400" />
        <Setter Property="Margin" Value="0,3" />
        <!--<Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=DisplayName}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="ItemTextBoxStyle">
        <Setter Property="Width" Value="400" />
        <!--<Setter Property="Margin" Value="0,3" />-->
    </Style>
</ResourceDictionary>