<UserControl x:Class="SyncPro.UI.Navigation.Content.SyncJobView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModels="clr-namespace:SyncPro.UI.ViewModels"
             xmlns:converters="clr-namespace:SyncPro.UI.Converters"
             xmlns:controls="clr-namespace:SyncPro.UI.Controls"
             xmlns:navigation="clr-namespace:SyncPro.UI.Navigation"
             xmlns:adapters="clr-namespace:SyncPro.Adapters;assembly=SyncPro.Core"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" 
             d:DataContext="{d:DesignInstance navigation:SyncJobPanelViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/WindowStyles.xaml" />
                <ResourceDictionary Source="/RelationshipEditor/StyleResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:DateTimeToStringConverter x:Key="FileDateTime" Format="g" />
            <converters:LevelToIndentConverter x:Key="LevelToIndent" />

            <Style TargetType="TextBlock" BasedOn="{StaticResource ItemHeaderStyleCore}" x:Key="RadioButtonItemTextStyle">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="TreeListItemStyle">
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontSize" Value="12.5" />
            </Style>

            <DataTemplate x:Key="RelativePathCellTemplate" DataType="{x:Type viewModels:EntryUpdateInfoViewModel}">
                <TextBlock x:Name="TextBox" Text="{Binding Path=RelativePath}" Style="{StaticResource TreeListItemStyle}" />
            </DataTemplate>

            <DataTemplate x:Key="ChangeTypeCellTemplate" DataType="{x:Type viewModels:EntryUpdateInfoViewModel}">
                <TextBlock x:Name="TextBox" Text="{Binding Path=ChangeHeader}" Style="{StaticResource TreeListItemStyle}" />
            </DataTemplate>

            <DataTemplate x:Key="LastModifiedCellTemplate" DataType="{x:Type viewModels:EntryUpdateInfoViewModel}">
                <TextBlock x:Name="TextBox" Text="{Binding Path=LastModified, Converter={StaticResource FileDateTime}}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource TreeListItemStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsDirectory}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DataTemplate>

            <DataTemplate x:Key="SizeCellTemplate" DataType="{x:Type viewModels:EntryUpdateInfoViewModel}">
                <TextBlock x:Name="TextBox" Text="{Binding Path=Size, Converter={StaticResource FileSize2}}" >
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource TreeListItemStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsDirectory}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </DataTemplate>

            <DataTemplate x:Key="EmptyCellTemplate" DataType="{x:Type viewModels:EntryUpdateInfoViewModel}">
            </DataTemplate>

            <DataTemplate x:Key="DisplayNameCellTemplate" DataType="{x:Type viewModels:ChangeMetrics}">
                <TextBlock Text="{Binding Path=DisplayName}" Style="{StaticResource TreeListItemStyle}" />
            </DataTemplate>

            <DataTemplate x:Key="ChangeAddedCellTemplate" DataType="{x:Type viewModels:ChangeMetrics}">
                <StackPanel>
                    <TextBlock Text="{Binding Path=Added}" Style="{StaticResource TreeListItemStyle}"
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsedReversed}}"/>
                    <TextBlock Text="{Binding Path=Added, Converter={StaticResource FileSize}}" Style="{StaticResource TreeListItemStyle}" 
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsed}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="ContentModifiedCellTemplate" DataType="{x:Type viewModels:ChangeMetrics}">
                <StackPanel>
                    <TextBlock Text="{Binding Path=Modified}" Style="{StaticResource TreeListItemStyle}"
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsedReversed}}"/>
                    <TextBlock Text="{Binding Path=Modified, Converter={StaticResource FileSize}}" Style="{StaticResource TreeListItemStyle}" 
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsed}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="MetadataModifiedCellTemplate" DataType="{x:Type viewModels:ChangeMetrics}">
                <TextBlock x:Name="TextBox" Text="{Binding Path=Metadata}" Style="{StaticResource TreeListItemStyle}" />
            </DataTemplate>

            <DataTemplate x:Key="RemovedCellTemplate" DataType="{x:Type viewModels:ChangeMetrics}">
                <StackPanel>
                    <TextBlock Text="{Binding Path=Removed}" Style="{StaticResource TreeListItemStyle}"
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsedReversed}}"/>
                    <TextBlock Text="{Binding Path=Removed, Converter={StaticResource FileSize}}" Style="{StaticResource TreeListItemStyle}" 
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsed}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="UnchangedCellTemplate" DataType="{x:Type viewModels:ChangeMetrics}">
                <StackPanel>
                    <TextBlock Text="{Binding Path=Unchanged}" Style="{StaticResource TreeListItemStyle}"
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsedReversed}}"/>
                    <TextBlock Text="{Binding Path=Unchanged, Converter={StaticResource FileSize}}" Style="{StaticResource TreeListItemStyle}" 
                               Visibility="{Binding Path=DisplayAsByteSize, Converter={StaticResource BooleanToVisibilityCollapsed}}"/>
                </StackPanel>
            </DataTemplate>

            <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
                <Setter Property="Canvas.Right" Value="-3"/>
                <Setter Property="Width" Value="6"/>
                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                                <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid>
                                <Border Name="cellBorder" BorderThickness="0,0,0,1" Padding="4,0,0,4" Margin="0,0,0,4">
                                    <TextBlock Text="{TemplateBinding Content}" Width="{TemplateBinding Width}" Margin="0,2"
                                           VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="#7d7d7d" />
                                </Border>
                                <Canvas>
                                    <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToBoolean}}" Value="True">
                                    <Setter Property="BorderBrush" TargetName="cellBorder" Value="#c7c7c7"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomHeaderStyle2" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid>
                                <Border Name="cellBorder" BorderThickness="0" Margin="0,0,0,4">
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="TreeListViewItemExpanderTemplate" DataType="{x:Type viewModels:EntryUpdateInfoViewModel}">
                <DockPanel>
                    <ToggleButton x:Name="Expander" 
                                  Style="{StaticResource ExpandCollapseToggleStyle}" 
                                  Margin="{Binding Level, Converter={StaticResource LevelToIndent}, RelativeSource={RelativeSource AncestorType={x:Type controls:TreeListViewItem}}}"
                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type controls:TreeListViewItem}}}"
                                  ClickMode="Press"/>
                    <TextBlock x:Name="TextBox" Text="{Binding Path=Name}" Style="{StaticResource TreeListItemStyle}" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource AncestorType={x:Type controls:TreeListViewItem}}}" Value="False">
                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel>
            <TextBlock Text="Analysis Summary" FontSize="20" FontFamily="Segoe UI Light" Foreground="#888888"
                       Margin="16,4,16,8" />

            <!-- ListView for the analysis summary -->
            <ListView ItemsSource="{Binding Path=SyncJob.ChangeMetricsList}" BorderThickness="0" HorizontalAlignment="Stretch">
                <ListView.View>
                    <GridView ColumnHeaderContainerStyle="{StaticResource CustomHeaderStyle}" AllowsColumnReorder="False">
                        <GridViewColumn Width="12" HeaderContainerStyle="{StaticResource CustomHeaderStyle2}" CellTemplate="{StaticResource EmptyCellTemplate}" />
                        <GridViewColumn Header=" " Width="120" CellTemplate="{StaticResource DisplayNameCellTemplate}" />
                        <GridViewColumn Header="Added" Width="120" CellTemplate="{StaticResource ChangeAddedCellTemplate}" />
                        <GridViewColumn Header="Content Modified" Width="120" CellTemplate="{StaticResource ContentModifiedCellTemplate}" />
                        <GridViewColumn Header="Metadata Modified" Width="120" CellTemplate="{StaticResource MetadataModifiedCellTemplate}" />
                        <GridViewColumn Header="Removed" Width="120" CellTemplate="{StaticResource RemovedCellTemplate}" />
                        <GridViewColumn Header="Unchanged" Width="120" CellTemplate="{StaticResource UnchangedCellTemplate}" />
                        <GridViewColumn Width="12" HeaderContainerStyle="{StaticResource CustomHeaderStyle2}" CellTemplate="{StaticResource EmptyCellTemplate}" />
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="0" x:Name="ListViewItemTemplateBd1" Margin="0">
                                        <GridViewRowPresenter Margin="0,2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <StackPanel Orientation="Horizontal" Margin="16,8,0,24">
                <TextBlock FontSize="13" FontWeight="SemiBold"
                                Text="Total size of files to copy: " />
                <TextBlock FontSize="13" FontWeight="SemiBold"
                                Text="{Binding Path=SyncJob.BytesToCopy, Converter={StaticResource FileSize}, Mode=OneWay}" />
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1">
            <Grid HorizontalAlignment="Left" Width="794">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                                Text="Changes To Synchronize" 
                                FontSize="20" 
                                FontFamily="Segoe UI Light" 
                                Foreground="#888888"
                                Margin="16,4,16,8" />

                <!-- Panel for the control options -->
                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="18,0">
                    <TextBlock Style="{StaticResource RadioButtonItemTextStyle}" Text="View as" />
                    <RadioButton VerticalContentAlignment="Center" Margin="8,0,0,0"
                                        IsChecked="{Binding Path=FileDisplayMode, Converter={StaticResource EnumToBoolean}, ConverterParameter=Flat}">
                        <TextBlock Style="{StaticResource RadioButtonItemTextStyle}" Text="Flat List" />
                    </RadioButton>
                    <RadioButton VerticalContentAlignment="Center" Margin="16,0,0,0"
                                        IsChecked="{Binding Path=FileDisplayMode, Converter={StaticResource EnumToBoolean}, ConverterParameter=Tree}">
                        <TextBlock Style="{StaticResource RadioButtonItemTextStyle}" Text="Tree" />
                    </RadioButton>
                </StackPanel>

            </Grid>
        </StackPanel>

        <!-- TreeListView for the hierarchical listing of files and folders -->
        <controls:TreeListView Grid.Row="2" ItemsSource="{Binding Path=SyncJob.EntryUpdatesTreeList}" Background="White" Margin="2,0,0,0"
                                    Visibility="{Binding Path=FileDisplayMode, Converter={StaticResource EnumToVisibility}, ConverterParameter=Tree}">
            <controls:TreeListView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type viewModels:EntryUpdateInfoViewModel}" ItemsSource="{Binding Path=ChildEntries}">
                    <Border>
                        <TextBlock Text="{Binding Path=Name}" />
                    </Border>
                </HierarchicalDataTemplate>
            </controls:TreeListView.Resources>
            <controls:TreeListView.Columns>
                <GridViewColumn Width="12" HeaderContainerStyle="{StaticResource CustomHeaderStyle2}" CellTemplate="{StaticResource EmptyCellTemplate}" />
                <GridViewColumn Header="File Name" Width="420" CellTemplate="{StaticResource TreeListViewItemExpanderTemplate}" />
                <GridViewColumn Header="Change" Width="120" CellTemplate="{StaticResource ChangeTypeCellTemplate}" />
                <GridViewColumn Header="Last Modified" Width="140" CellTemplate="{StaticResource LastModifiedCellTemplate}" />
                <GridViewColumn Header="Size" Width="85" CellTemplate="{StaticResource SizeCellTemplate}" />
                <GridViewColumn Width="12" HeaderContainerStyle="{StaticResource CustomHeaderStyle2}" CellTemplate="{StaticResource EmptyCellTemplate}" />
            </controls:TreeListView.Columns>
        </controls:TreeListView>

        <!-- ListView for the flatlisting of files and folders -->
        <ListView Grid.Row="2" ItemsSource="{Binding Path=SyncJob.EntryUpdatesFlatList}" BorderThickness="0" HorizontalAlignment="Stretch"
                  SelectedItem="{Binding Path=SelectedSyncEntry}"
                  Visibility="{Binding Path=FileDisplayMode, Converter={StaticResource EnumToVisibility}, ConverterParameter=Flat}">
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{StaticResource CustomHeaderStyle}" AllowsColumnReorder="False">
                    <GridViewColumn Width="12" HeaderContainerStyle="{StaticResource CustomHeaderStyle2}" CellTemplate="{StaticResource EmptyCellTemplate}" />
                    <GridViewColumn Header="File Name" Width="420" CellTemplate="{StaticResource RelativePathCellTemplate}" />
                    <GridViewColumn Header="Change" Width="120" CellTemplate="{StaticResource ChangeTypeCellTemplate}" />
                    <GridViewColumn Header="Last Modified" Width="140" CellTemplate="{StaticResource LastModifiedCellTemplate}" />
                    <GridViewColumn Header="Size" Width="85" CellTemplate="{StaticResource SizeCellTemplate}" />
                    <GridViewColumn Width="12" HeaderContainerStyle="{StaticResource CustomHeaderStyle2}" CellTemplate="{StaticResource EmptyCellTemplate}" />
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="0" x:Name="ListViewItemTemplateBd1" Margin="0">
                                    <GridViewRowPresenter Margin="0,4" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#e8e8e8" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightGray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"
                BorderThickness="1,0,0,0" BorderBrush="#c7c7c7" MinWidth="60" UseLayoutRounding="True"
                Padding="8">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectedSyncEntry}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel>
                

                <StackPanel Orientation="Horizontal">
                    <Image HorizontalAlignment="Left"
                           Source="{Binding Path=SelectedSyncEntry.LargeIcon}"
                           Width="32"
                           Margin="0,0,4,0"/>

                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock Text="{Binding Path=SelectedSyncEntry.Name}" FontSize="16" Margin="0,4,0,0" />
                        <TextBlock Text="{Binding Path=SelectedSyncEntry.TypeName}" Margin="0" />

                    </StackPanel>
                </StackPanel>

                <Grid Margin="0,16,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="0" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Created" Foreground="#7d7d7d" Margin="0,2,0,0" />
                    <TextBlock Grid.Column="3" Grid.Row="0" Margin="4,2,0,0" 
                               Foreground="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToForeground}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.CreatedTimestamp}}"
                               Text="{Binding Path=SelectedSyncEntry.CreationDateTimeUtcNew}"/>
                    <TextBlock Grid.Column="3" Grid.Row="1" Margin="4,2,0,0" 
                               Visibility="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToVisibility}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.CreatedTimestamp}}"
                               Text="{Binding Path=SelectedSyncEntry.CreationDateTimeUtcOld}"/>

                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Last Modified" Foreground="#7d7d7d" Margin="0,2,0,0" />
                    <TextBlock Grid.Column="3" Grid.Row="2" Margin="4,2,0,0" 
                               Foreground="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToForeground}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.ModifiedTimestamp}}"
                               Text="{Binding Path=SelectedSyncEntry.ModifiedDateTimeUtcNew}"/>
                    <TextBlock Grid.Column="3" Grid.Row="3" Margin="4,2,0,0" Foreground="Red"
                               Visibility="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToVisibility}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.ModifiedTimestamp}}"
                               Text="{Binding Path=SelectedSyncEntry.ModifiedDateTimeUtcOld}"/>

                    <TextBlock Grid.Column="0" Grid.Row="4" Text="Size" Foreground="#7d7d7d" Margin="0,2,0,0" 
                               Visibility="{Binding Path=SelectedSyncEntry.IsDirectory, Converter={StaticResource BooleanToVisibilityCollapsedReversed}}" />
                    <TextBlock Grid.Column="3" Grid.Row="4" Margin="4,2,0,0"
                               Visibility="{Binding Path=SelectedSyncEntry.IsDirectory, Converter={StaticResource BooleanToVisibilityCollapsedReversed}}"
                               Text="{Binding Path=SelectedSyncEntry.SizeNew, Converter={StaticResource FileSize}}"
                               Foreground="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToForeground}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.FileSize}}"
                               ToolTip="{Binding Path=SelectedSyncEntry.SizeNew}"/>
                    <TextBlock Grid.Column="3" Grid.Row="5" Margin="4,2,0,0" Foreground="Red"
                               Visibility="{Binding Path=SelectedSyncEntry.ShowSizeOld, Converter={StaticResource BooleanToVisibilityCollapsed}}"
                               Text="{Binding Path=SelectedSyncEntry.SizeOld, Converter={StaticResource FileSize}}"
                               ToolTip="{Binding Path=SelectedSyncEntry.SizeOld}"/>

                    <TextBlock Grid.Column="0" Grid.Row="6" Text="SHA1 Hash" Foreground="#7d7d7d" Margin="0,16,0,0" />
                    <TextBlock Grid.Column="3" Grid.Row="6" Margin="4,16,0,0"  TextTrimming="CharacterEllipsis" Width="150"
                               Text="{Binding Path=SelectedSyncEntry.Sha1HashNew, Converter={StaticResource ByteArrayToString}}"
                               Foreground="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToForeground}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.Sha1Hash}}"
                               ToolTip="{Binding Path=SelectedSyncEntry.Sha1HashNew, Converter={StaticResource ByteArrayToString}}"/>
                    <TextBlock Grid.Column="3" Grid.Row="7" Margin="4,16,0,0"  TextTrimming="CharacterEllipsis" Width="150"
                               Foreground="Red"
                               Visibility="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToVisibility}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.Sha1Hash}}"
                               Text="{Binding Path=SelectedSyncEntry.Sha1HashOld, Converter={StaticResource ByteArrayToString}}"
                               ToolTip="{Binding Path=SelectedSyncEntry.Sha1HashOld, Converter={StaticResource ByteArrayToString}}"/>

                    <TextBlock Grid.Column="0" Grid.Row="8" Text="MD5 Hash" Foreground="#7d7d7d" Margin="0,2,0,0" />
                    <TextBlock Grid.Column="3" Grid.Row="8" Margin="4,2,0,0"  TextTrimming="CharacterEllipsis" Width="150"
                               Text="{Binding Path=SelectedSyncEntry.Md5HashNew, Converter={StaticResource ByteArrayToString}}"
                               Foreground="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToForeground}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.Md5Hash}}"
                               ToolTip="{Binding Path=SelectedSyncEntry.Md5HashNew, Converter={StaticResource ByteArrayToString}}"/>
                    <TextBlock Grid.Column="3" Grid.Row="9" Margin="4,2,0,0"  TextTrimming="CharacterEllipsis" Width="150"
                               Foreground="Red"
                               Visibility="{Binding Path=SelectedSyncEntry.Flags, Converter={StaticResource SyncEntryChangedFlagsToVisibility}, ConverterParameter={x:Static adapters:SyncEntryChangedFlags.Md5Hash}}"
                               Text="{Binding Path=SelectedSyncEntry.Md5HashOld, Converter={StaticResource ByteArrayToString}}"
                               ToolTip="{Binding Path=SelectedSyncEntry.Md5HashOld, Converter={StaticResource ByteArrayToString}}"/>

                    <TextBlock Grid.Column="0" Grid.Row="10" Text="Last Synchronized" Foreground="#7d7d7d" Margin="0,16,0,0" />
                    <TextBlock Grid.Column="3" Grid.Row="10" Margin="4,16,0,0" 
                               Text="{Binding Path=SelectedSyncEntry.EntryLastUpdatedDateTimeUtc}"/>

                    <TextBlock Grid.Column="0" Grid.Row="12" Text="Sync Runs" Foreground="#7d7d7d" Margin="0,16,0,0" />
                    <ItemsControl Grid.Column="3" Grid.Row="12" Margin="4,16,0,0"
                                  ItemsSource="{Binding Path=SelectedSyncEntry.SyncJobReferences}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=DisplayName}" TextDecorations="Underline"
                                           Cursor="Hand">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="Blue" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="LightBlue"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </StackPanel>
        </Border>

        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Width="3" 
                      Background="Transparent" BorderThickness="0" HorizontalAlignment="Left">
            <GridSplitter.Style>
                <Style TargetType="GridSplitter">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SelectedSyncEntry}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GridSplitter.Style>
        </GridSplitter>
    </Grid>
</UserControl>
